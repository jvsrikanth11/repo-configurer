name: GitHub Actions Secrets
on:   
  workflow_dispatch:
    inputs:
      targetRepo: 
        description: 'Environment (dev, stage, prod)'
        required: true
jobs:
  GitHub-Actions-Secrets:
    runs-on: ubuntu-latest
    steps:
      # List out repository details
      - name: Step 1 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      # Check out repository code
      - name: Step 2 - Check out repository code
        uses: actions/checkout@v2
      
      # Make file executeable
      - name: Step 3 - Make file executeable
        run: chmod +x ./.github/scripts/decrypt_secret.sh
      
      # Decrypt large secret from file
      - name: Step 4 - Decrypt large secret from file
        run: ./.github/scripts/decrypt_secret.sh
        env:
          SECRET_PASS: ${{ secrets.SECRET_PASS }}
      
      # Test printing your secret from file
      - name: Step 5 - Test printing your secret (Remove this step in production)
        run: |
          cd .github/secrets
          cat app_secrets.json
        
      # List files in the repository
      - name: Step 6 - List files in the repository
        run: |
          ls ${{ github.workspace }}
          echo "The ${{ github.repository }} repository has been cloned to the runner."
          echo "This job's status is ${{ job.status }}."
      
      # Determine environment
      - name: Step 7 - Determine environment
        id: determine_environment
        run: 
          echo "::set-output name=environment::${GITHUB_REF#refs/heads/}"
          echo $environment
      
      # Echo out a GitHub Actions Secret to the logs
      - name: Step 8 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The GitHub Action Secret will be masked:  "
          echo ${{ secrets.APP_KEY }}
          echo "Trick to echo GitHub Actions Secret:  "
          echo ${{secrets.APP_KEY}} | sed 's/./& /g'
          
      # Use a GitHub Actions secret variable in a bash shell
      - name: Step 9 - GitHub Action if statement (true)
        env: 
          WHO_TO_TRUST: ${{ secrets.APP_KEY }}
        if:  env.WHO_TO_TRUST == 'APP_KEY'
        run: echo "I know what the secret token is!"

      # A GitHub Actions if statement with a secret environment variable
      - name: Step 10 - Conditional GitHub Action (false)
        shell: bash
        env: 
          WHO_TO_TRUST: ${{ secrets.APP_KEY }}
        if:  env.WHO_TO_TRUST != 'APP_KEY'
        run: echo "I was wrong thinking the GitHub secret was 'TrustNobody'!"
      
      - name: Step 11 - Pushes secrets to another repository
        id: push_secrets
        uses: jvsrikanth11/scrs-configurer@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN }}
        with:
          source-directory: 'output'
          destination-github-username: 'jvsrikanth11'
          destination-repository-name: 'scrs-test-secrets-project'
          user-email: janaki.srikanth@gmail.com
          commit-message: See ORIGIN_COMMIT from $GITHUB_REF
          target-branch: main
      - name: Test get variable exported by push-to-another-repository
        run: echo $DESTINATION_CLONED_DIRECTORY
